/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import Class.Order;
import Util.DBConnection;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import com.toedter.calendar.JMonthChooser;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.plaf.basic.BasicComboBoxUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.Element;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Dhananjaya
 */
public class order extends javax.swing.JFrame {

    /**
     * Creates new form order
     */
    
    Connection conn;
    PreparedStatement pstate;
    Statement statement;
    ResultSet rset;
    
    
    
    public order() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        displayOrder();
        //displayRecOrder();
    }
    
    public ArrayList<Order> orderList(){
    
        ArrayList <Order> orderList = new ArrayList<>();
        String selectQuery = "SELECT * FROM orders where state = 'Pending'";
        
        try {
            conn = DBConnection.getDBConnection();
            statement = conn.createStatement();
            
            rset = statement.executeQuery(selectQuery);
            
            Order order;
            
            while(rset.next()){
            
                order = new Order(rset.getInt(1), rset.getString(2), rset.getString(3), rset.getInt(4), rset.getString(5), rset.getInt(6), rset.getString(7), rset.getInt(8), rset.getInt(9));
                orderList.add(order);
            }
            
        } catch (SQLException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        return orderList;
    
    }
    
    
    public void displayOrder(){
    
        ArrayList<Order> o = orderList();
        DefaultTableModel model = (DefaultTableModel)table_pending_orders.getModel();
        
        
        Object [] row = new Object[9];
        for(int i = 0;i < o.size();i++){
        
            row[0] = o.get(i).getOrderID();
            row[1] = o.get(i).getOrderDate();
            row[2] = o.get(i).getRecDate();
            row[3] = o.get(i).getItemCode();
            row[4] = o.get(i).getSupName();
            row[5] = o.get(i).getAmount();
            row[6] = o.get(i).getState();
            row[7] = o.get(i).getE_Type();
            row[8] = o.get(i).getQunty();
            model.addRow(row);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        orderDate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        recDate = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        itemCode = new java.awt.TextField();
        jLabel6 = new javax.swing.JLabel();
        supName = new java.awt.TextField();
        jLabel7 = new javax.swing.JLabel();
        qunty = new java.awt.TextField();
        jLabel9 = new javax.swing.JLabel();
        amount = new java.awt.TextField();
        jButton10 = new javax.swing.JButton();
        JScrollPane = new javax.swing.JScrollPane();
        table_pending_orders = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnState = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_Rec_Order = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        dropBox = new javax.swing.JComboBox<>();
        searchArea = new javax.swing.JTextField();
        lowDate = new com.toedter.calendar.JDateChooser();
        highDate = new com.toedter.calendar.JDateChooser();
        btnSearch = new javax.swing.JButton();
        delete_Order = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        input_year = new com.toedter.calendar.JYearChooser();
        input_month = new com.toedter.calendar.JMonthChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Report = new javax.swing.JTable();
        download_Repo = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JLabel();
        txtNumber = new javax.swing.JLabel();
        txtHighest = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jButton1.setBackground(new java.awt.Color(0, 102, 102));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Inventory");

        jButton2.setBackground(new java.awt.Color(0, 102, 102));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Hall Reservation");

        jButton3.setBackground(new java.awt.Color(0, 102, 102));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Room Reservation");

        jButton4.setBackground(new java.awt.Color(0, 102, 102));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Menus");

        jButton5.setBackground(new java.awt.Color(0, 102, 102));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Orders");

        jButton6.setBackground(new java.awt.Color(0, 102, 102));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Payment");

        jButton7.setBackground(new java.awt.Color(0, 102, 102));
        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Travel Package");

        jButton8.setBackground(new java.awt.Color(0, 102, 102));
        jButton8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Employees");

        jButton9.setBackground(new java.awt.Color(0, 102, 102));
        jButton9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Expenses");

        jButton12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("Home");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(212, Short.MAX_VALUE)
                .addComponent(jButton12)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addGap(18, 18, 18)
                .addComponent(jButton9)
                .addGap(74, 74, 74))
        );

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 75)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HOTEL ARONWAY");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Add order");

        jLabel3.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel3.setText("Order date");

        orderDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 102), 2));
        orderDate.setDateFormatString("yyyy,MM,dd");
        orderDate.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                orderDateHierarchyChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel4.setText("Receiving date");

        recDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 102), 2));
        recDate.setDateFormatString("yyyy,MM,dd");

        jLabel5.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel5.setText("Item code");

        itemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCodeActionPerformed(evt);
            }
        });
        itemCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemCodeKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel6.setText("Supplier name");

        jLabel7.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel7.setText("Quantity");

        qunty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quntyKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel9.setText("Amount");

        amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amountKeyPressed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(153, 153, 153));
        jButton10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton10.setText("CLEAR");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(supName, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(recDate, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(orderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(itemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(qunty, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton10)))
                        .addGap(17, 17, 17)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(44, 44, 44)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(orderDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(itemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(supName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(qunty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        JScrollPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JScrollPaneMouseClicked(evt);
            }
        });

        table_pending_orders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Order Date", "Receive Date", "Item Code", "Supplier Name", "Amount", "State", "Expencess Type", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_pending_orders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_pending_ordersMouseClicked(evt);
            }
        });
        JScrollPane.setViewportView(table_pending_orders);

        btnUpdate.setBackground(new java.awt.Color(153, 153, 153));
        btnUpdate.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 102), 3));
        btnUpdate.setContentAreaFilled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(153, 153, 153));
        btnDelete.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 102), 3));
        btnDelete.setContentAreaFilled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnState.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnState.setText("CHANGE STATE");
        btnState.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 102), 3));
        btnState.setContentAreaFilled(false);
        btnState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStateActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(153, 153, 153));
        btnAdd.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 102), 3));
        btnAdd.setContentAreaFilled(false);
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(141, 141, 141)
                        .addComponent(btnState))
                    .addComponent(JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnState, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("ADD ORDERS", jPanel4);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Supply Orders");

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        table_Rec_Order.setBorder(new javax.swing.border.MatteBorder(null));
        table_Rec_Order.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        table_Rec_Order.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Order Date", "Receive Date", "Item Code", "Supplier Name", "Amount", "State", "Expencess Type", "Quantity"
            }
        ));
        table_Rec_Order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_Rec_OrderMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_Rec_Order);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Search by");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Search by date");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("to");

        dropBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dropBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Order ID", "Supplier name", "Item code" }));

        searchArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchAreaKeyReleased(evt);
            }
        });

        lowDate.setDateFormatString("yyyy,MM,dd");
        lowDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lowDateKeyPressed(evt);
            }
        });

        highDate.setDateFormatString("yyyy,MM,dd");

        btnSearch.setLabel("...");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        delete_Order.setBackground(new java.awt.Color(0, 102, 153));
        delete_Order.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delete_Order.setText("Delete order");
        delete_Order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_OrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(438, 438, 438)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dropBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchArea, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lowDate, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(highDate, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(delete_Order, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(197, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(searchArea)
                        .addGap(61, 61, 61))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lowDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dropBox)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(62, 62, 62))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(highDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(delete_Order, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108))
        );

        jTabbedPane1.addTab("VIEW ORDERS", jPanel5);

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Monthly Report");

        jLabel14.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setText("Month");

        jLabel15.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText("Year");

        table_Report.setForeground(new java.awt.Color(0, 0, 0));
        table_Report.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Supplier Name", "Quantity", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_Report.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(table_Report);

        download_Repo.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        download_Repo.setText("Download Report");
        download_Repo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                download_RepoActionPerformed(evt);
            }
        });

        jButton11.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton11.setText("View");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel16.setText("Total amount          :");

        jLabel17.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel17.setText("Number of Orders      :");

        jLabel18.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel18.setText("Highest costed order  :");

        txtAmount.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        txtNumber.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        txtHighest.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(download_Repo))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jButton11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(input_month, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(input_year, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumber))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHighest))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAmount)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(input_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton11)
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtAmount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtNumber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtHighest))
                .addGap(18, 18, 18)
                .addComponent(download_Repo)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(690, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("REPORTS", jPanel7);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemCodeActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(itemCode.getText().trim().isEmpty() | qunty.getText().trim().isEmpty() |
           supName.getText().trim().isEmpty() | amount.getText().trim().isEmpty() |
           ((JTextField)orderDate.getDateEditor().getUiComponent()).getText().trim().isEmpty() |
           ((JTextField)recDate.getDateEditor().getUiComponent()).getText().trim().isEmpty()
          ){
            
            JOptionPane.showMessageDialog(null, "Cannot have empty fields");
        }
        
        try {
            conn = DBConnection.getDBConnection();
            int click = table_pending_orders.getSelectedRow();
            String ID = table_pending_orders.getModel().getValueAt(click, 0).toString();
            
            String updateQuery = "UPDATE orders SET ordered_Date=?,receiving_Date=?,ingredient_Code=?,supplier_Name=?,amount=?,quantity=? WHERE orderID = "+ID;
            
            pstate = conn.prepareStatement(updateQuery);
            
            //pstate.setString(PROPERTIES, ID);
            pstate.setString(1, ((JTextField)orderDate.getDateEditor().getUiComponent()).getText());
            pstate.setString(2, ((JTextField)recDate.getDateEditor().getUiComponent()).getText());
            pstate.setString(3, itemCode.getText());
            pstate.setString(4, supName.getText());
            pstate.setString(5, amount.getText());
            pstate.setString(6, qunty.getText());
            pstate.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)table_pending_orders.getModel();
            model.setRowCount(0);
            displayOrder();
            JOptionPane.showMessageDialog(null, "Order updated !");
            
            orderDate.setCalendar(null);
            recDate.setCalendar(null);
            itemCode.setText(null);
            supName.setText(null);
            amount.setText(null);
            qunty.setText(null);
            
        } catch (SQLException | NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Enter a valid item code");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        if(itemCode.getText().trim().isEmpty() | qunty.getText().trim().isEmpty() |
           supName.getText().trim().isEmpty() | amount.getText().trim().isEmpty() |
           ((JTextField)orderDate.getDateEditor().getUiComponent()).getText().trim().isEmpty() |
           ((JTextField)recDate.getDateEditor().getUiComponent()).getText().trim().isEmpty()
          ){
            
            JOptionPane.showMessageDialog(null, "Cannot have empty fields");
        }
        
        try {
            conn = DBConnection.getDBConnection();
            
            String query = "INSERT INTO orders(orderID,ordered_Date,receiving_Date,ingredient_Code,supplier_Name,amount,state,E_type,quantity) VALUES(?,?,?,?,?,?,?,?,?)";
            
            pstate = conn.prepareStatement(query);
            
            pstate.setInt(1, 0);
            //First way of date set(Setting a format)
            SimpleDateFormat simpleDate = new SimpleDateFormat("yyyy-MM-dd");
            String date = simpleDate.format(orderDate.getDate());
            pstate.setString(2, date);
            //Second way of date set
            pstate.setString(3, ((JTextField)recDate.getDateEditor().getUiComponent()).getText());
            pstate.setString(4, itemCode.getText());
            pstate.setString(5, supName.getText());
            pstate.setString(6, amount.getText());
            pstate.setString(7, "Pending");
            pstate.setString(8, "1111");
            pstate.setString(9, qunty.getText());
            pstate.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)table_pending_orders.getModel();
            model.setRowCount(0);
            displayOrder();
            JOptionPane.showMessageDialog(null, "Order inserted !");
            
            orderDate.setCalendar(null);
            recDate.setCalendar(null);
            itemCode.setText(null);
            supName.setText(null);
            amount.setText(null);
            qunty.setText(null);
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Enter a valid item code");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void orderDateHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_orderDateHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_orderDateHierarchyChanged

    private void itemCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemCodeKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
        
            itemCode.setEditable(false);
            JOptionPane.showMessageDialog(null, "Enter only numbers!");
        }else{
        
            itemCode.setEditable(true);
        }
    }//GEN-LAST:event_itemCodeKeyPressed

    private void quntyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quntyKeyPressed
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
        
            qunty.setEditable(false);
            JOptionPane.showMessageDialog(null, "Enter only numbers!");
        }else{
        
            qunty.setEditable(true);
        }
    }//GEN-LAST:event_quntyKeyPressed

    private void amountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
        
            amount.setEditable(false);
            JOptionPane.showMessageDialog(null, "Enter only numbers!");
        }else{
        
            amount.setEditable(true);
        }
    }//GEN-LAST:event_amountKeyPressed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            conn = DBConnection.getDBConnection();
                       
            int row = table_pending_orders.getSelectedRow();
            String ID = (table_pending_orders.getModel().getValueAt(row, 0).toString());
            
            String deleteQuery ="DELETE FROM `orders` WHERE orderID = "+ID;
            
            pstate = conn.prepareStatement(deleteQuery);
            pstate.executeUpdate();
            
            DefaultTableModel tabmodel = (DefaultTableModel)table_pending_orders.getModel();
            tabmodel.setRowCount(0);
            displayOrder();
            
            orderDate.setCalendar(null);
            recDate.setCalendar(null);
            itemCode.setText(null);
            supName.setText(null);
            amount.setText(null);
            qunty.setText(null);
            
            JOptionPane.showMessageDialog(null, "Order deleted !");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void JScrollPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JScrollPaneMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_JScrollPaneMouseClicked

    private void table_pending_ordersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_pending_ordersMouseClicked
        // TODO add your handling code here:
        int click = table_pending_orders.getSelectedRow();
        TableModel tmodel = table_pending_orders.getModel();
        
       
        try {
        
            int select = table_pending_orders.getSelectedRow();
            Date oDate = new SimpleDateFormat("yyyy-MM-dd").parse((String)tmodel.getValueAt(select, 1));
            Date rDate = new SimpleDateFormat("yyyy-MM-dd").parse((String)tmodel.getValueAt(select, 2));
            
            orderDate.setDate(oDate);
            recDate.setDate(rDate);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        itemCode.setText(tmodel.getValueAt(click, 3).toString());
        supName.setText(tmodel.getValueAt(click, 4).toString());
        qunty.setText(tmodel.getValueAt(click, 8).toString());
        amount.setText(tmodel.getValueAt(click, 5).toString());
        
    }//GEN-LAST:event_table_pending_ordersMouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        orderDate.setCalendar(null);
        recDate.setCalendar(null);
        itemCode.setText(null);
        supName.setText(null);
        amount.setText(null);
        qunty.setText(null);
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void btnStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStateActionPerformed
        // TODO add your handling code here:
               
        try {
            conn = DBConnection.getDBConnection();
            int click = table_pending_orders.getSelectedRow();
            String ID = table_pending_orders.getModel().getValueAt(click, 0).toString();
            String state = table_pending_orders.getModel().getValueAt(click, 6).toString();
            
            
            if(!ID.equals(null)){    
                if(state.equals("Pending")){

                    String stateQuery = "UPDATE orders SET state =? WHERE orderID = "+ID;

                    pstate = conn.prepareStatement(stateQuery);
                    pstate.setString(1, "Received");
                    pstate.executeUpdate();
                    DefaultTableModel model = (DefaultTableModel)table_pending_orders.getModel();
                    model.setRowCount(0);
                    displayOrder();
                    
                    orderDate.setCalendar(null);
                    recDate.setCalendar(null);
                    itemCode.setText(null);
                    supName.setText(null);
                    amount.setText(null);
                    qunty.setText(null);
                    
                    JOptionPane.showMessageDialog(null, "State changed to Received !");

                }   
            }else if(ID.equals(0)){
            
                JOptionPane.showMessageDialog(null, "Select an order");
            }
            
        } catch (ArrayIndexOutOfBoundsException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Select an Order");
        }
    }//GEN-LAST:event_btnStateActionPerformed

    private void searchAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchAreaKeyReleased
        // TODO add your handling code here:
        try {
            conn = DBConnection.getDBConnection();
            String select = null;
            String comBox = (String)dropBox.getSelectedItem();
            if(comBox.equals("Item code")){
                select = "ingredient_Code";
            }else if(comBox.equals("Supplier name")){
                select = "supplier_Name";
            }else if(comBox.equals("Order ID")){
                select = "orderID";
            }
            String searchQuery = "SELECT * FROM orders WHERE "+select+"=?";
            System.out.println(searchQuery);
            pstate = conn.prepareStatement(searchQuery);
            pstate.setString(1, searchArea.getText());
            
            ResultSet rset1 = pstate.executeQuery();
            
            table_Rec_Order.setModel(DbUtils.resultSetToTableModel(rset1));
            
            pstate.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchAreaKeyReleased

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String searchDateQuery = null;
        if(((JTextField)lowDate.getDateEditor().getUiComponent()).getText().trim().isEmpty() && 
           ((JTextField)highDate.getDateEditor().getUiComponent()).getText().trim().isEmpty()){
            
            JOptionPane.showMessageDialog(null, "Enter date to search");
        }
        try {
            conn = DBConnection.getDBConnection();
            //String searchDateQuery = "SELECT * FROM orders WHERE ordered_Date >=?";
            System.out.println(searchDateQuery);
            
            if(((JTextField)highDate.getDateEditor().getUiComponent()).getText().trim().isEmpty() && 
                ((JTextField)lowDate.getDateEditor().getUiComponent()).getText() != null){
        
                searchDateQuery = "SELECT * FROM orders WHERE ordered_Date >=? ORDER BY ordered_Date ASC";
                pstate = conn.prepareStatement(searchDateQuery);
                pstate.setString(1, ((JTextField)lowDate.getDateEditor().getUiComponent()).getText());
                
            }else if(((JTextField)lowDate.getDateEditor().getUiComponent()).getText().trim().isEmpty()&&
                    ((JTextField)highDate.getDateEditor().getUiComponent()).getText() != null ){
        
                searchDateQuery = "SELECT * FROM orders WHERE ordered_Date <=? ORDER BY ordered_Date ASC";
                pstate = conn.prepareStatement(searchDateQuery);
                pstate.setString(1, ((JTextField)highDate.getDateEditor().getUiComponent()).getText());
                //JOptionPane.showMessageDialog(null, "Enter date to search");    
            }else{
        
                searchDateQuery = "SELECT * FROM orders WHERE ordered_Date >=? AND ordered_Date <=? ORDER BY ordered_Date ASC";
                pstate = conn.prepareStatement(searchDateQuery);
                pstate.setString(1, ((JTextField)lowDate.getDateEditor().getUiComponent()).getText());
                pstate.setString(2, ((JTextField)highDate.getDateEditor().getUiComponent()).getText());
            }
            
            
            
            
            ResultSet rset3 = pstate.executeQuery();
            
            table_Rec_Order.setModel(DbUtils.resultSetToTableModel(rset3));
            
            pstate.close();
            
            lowDate.setCalendar(null);
            highDate.setCalendar(null);
            
        } catch (SQLException  e) {
            JOptionPane.showMessageDialog(null, e);
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter with valid format");
        }
        /*SimpleDateFormat simpleDate = new SimpleDateFormat("yyyy-MM-dd");
        String low = simpleDate.format(lowDate.getDate());
        DefaultTableModel tmodel = (DefaultTableModel)table_Rec_Order.getModel();
        TableRowSorter<DefaultTableModel> tableSort = new TableRowSorter<DefaultTableModel>(tmodel);
        table_Rec_Order.setRowSorter(tableSort);
        tableSort.setRowFilter(RowFilter.regexFilter(low.trim()));*/
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void delete_OrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_OrderActionPerformed
        // TODO add your handling code here:
        try {
            conn = DBConnection.getDBConnection();
                       
            int row = table_Rec_Order.getSelectedRow();
            String ID = (table_Rec_Order.getModel().getValueAt(row, 0).toString());
            
            String deleteQuery ="DELETE FROM `orders` WHERE orderID = "+ID;
            
            pstate = conn.prepareStatement(deleteQuery);
            pstate.executeUpdate();
            
            DefaultTableModel tabmodel = (DefaultTableModel)table_Rec_Order.getModel();
            tabmodel.setRowCount(0);
            //displayOrder();
            
            JOptionPane.showMessageDialog(null, "Order deleted !");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_delete_OrderActionPerformed

    private void lowDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lowDateKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_lowDateKeyPressed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        dispose();
        Home h = new Home();
        h.setVisible(true);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void table_Rec_OrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_Rec_OrderMouseClicked
        // TODO add your handling code here:
        /*boolean a = table_Rec_Order.isEditing();
        if(a == false){
        table_Rec_Order.editingCanceled(null);
        }*/
    }//GEN-LAST:event_table_Rec_OrderMouseClicked

    private int year;
    private int month;
    private String sumAmount;
    private String maxSup;
    private String maxA;
    private String orderCunt;
    private void download_RepoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_download_RepoActionPerformed
        // TODO add your handling code here:
       
        //Download Report
        if(table_Report.getRowCount()==0){
            //Handling empty table
            JOptionPane.showMessageDialog(null, "Cannot generate Report 0 records !");
        }else{
        
            String uriPath = "";
            JFileChooser jfile = new JFileChooser();
            jfile.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int j = jfile.showSaveDialog(this);
        
            if(j == JFileChooser.APPROVE_OPTION){
                uriPath = jfile.getSelectedFile().getPath();
            }
            Document document = new Document();

            try {
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy");
                LocalDateTime now = LocalDateTime.now();  
                String date = dtf.format(now);
                PdfWriter.getInstance(document, new FileOutputStream(uriPath+"\\"+date+"-"+(month+1)+".pdf"));


                document.open();

                PdfPTable table = new PdfPTable(3);

                Font font1 = new Font(Font.FontFamily.TIMES_ROMAN,18,Font.BOLD,BaseColor.GRAY);
                Font font2 = new Font(Font.FontFamily.TIMES_ROMAN,13,Font.NORMAL,BaseColor.GRAY);
                Font font3 = new Font(Font.FontFamily.TIMES_ROMAN,12,Font.NORMAL,BaseColor.GRAY);
                document.add(new Paragraph(" ==================================================================",font2));
                document.add(new Paragraph("                                            Hotel Aronway",font1));
                document.add(new Paragraph(" ==================================================================",font2));
                document.add(new Paragraph(" Monthly Supply Order Details\n\n",font2));
                document.add(new Paragraph(" Year     : "+year+"",font3));
                document.add(new Paragraph(" Month  :   "+(month+1)+"\n",font3));
                document.add(new Paragraph("\n"));

                PdfPCell cell1 = new PdfPCell(new Phrase("Supplier Name",font3));
                cell1.setBorderWidth(0f);
                table.addCell(cell1);

                PdfPCell cell2 = new PdfPCell(new Phrase("Quantity",font3));
                cell2.setBorderWidth(0f);
                table.addCell(cell2);

                PdfPCell cell3 = new PdfPCell(new Phrase("Amount",font3));
                cell3.setBorderWidth(0f);
                table.addCell(cell3);

                for(int i = 0;i < table_Report.getRowCount();i++){

                    String suplName = table_Report.getValueAt(i, 0).toString();
                    String quantity = table_Report.getValueAt(i, 1).toString();
                    String tamount = table_Report.getValueAt(i, 2).toString();

                    PdfPCell cell4 = new PdfPCell(new Phrase(suplName,font3));
                    cell4.setBorderWidth(0f);
                    table.addCell(cell4);

                    PdfPCell cell5 = new PdfPCell(new Phrase(quantity,font3));
                    cell5.setBorderWidth(0f);
                    table.addCell(cell5);

                    PdfPCell cell6 = new PdfPCell(new Phrase(tamount,font3));
                    cell6.setBorderWidth(0f);
                    table.addCell(cell6);


                }
                document.add(table);
                document.add(new Paragraph("                                                                                                            =========",font3));

                document.add(new Paragraph(" Total Amount               :                                                                       "+sumAmount,font3));
                document.add(new Paragraph(" Number of orders         :  "+orderCunt,font3));
                document.add(new Paragraph(" Highest costed order    :  "+maxSup+"     Rs : "+maxA,font3));



            } catch (FileNotFoundException ex) {
                Logger.getLogger(order.class.getName()).log(Level.SEVERE, null, ex);
            } catch (DocumentException ex) {
                Logger.getLogger(order.class.getName()).log(Level.SEVERE, null, ex);
            }


            document.close();
            }
        
        //After downloading report clearing the table
        DefaultTableModel model = (DefaultTableModel) table_Report.getModel();
        model.setRowCount(0);
        
    }//GEN-LAST:event_download_RepoActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:

        //Retrive data from database
        year = input_year.getYear();
        month = input_month.getMonth();
        String viewQuery = "SELECT supplier_Name,quantity,amount FROM `orders` WHERE state = 'Received' AND receiving_Date BETWEEN '"+year+"/"+(month+1)+"/01' AND '"+year+"/"+(month+1)+"/31'";
        String sumQuery = "SELECT SUM(amount) FROM orders WHERE state = 'Received' AND receiving_Date BETWEEN '"+year+"/"+(month+1)+"/01' AND '"+year+"/"+(month+1)+"/31'";
        String maxSupplier = "SELECT supplier_Name FROM orders WHERE amount = (SELECT MAX(amount) FROM orders WHERE state = 'Received' AND receiving_Date BETWEEN '"+year+"/"+(month+1)+"/01' AND '"+year+"/"+(month+1)+"/31')";
        String maxAmount = "SELECT MAX(amount) FROM orders WHERE state = 'Received' AND receiving_Date BETWEEN '"+year+"/"+(month+1)+"/01' AND '"+year+"/"+(month+1)+"/31'";
        String numOfOrders = "SELECT COUNT(amount) FROM orders WHERE state = 'Received' AND receiving_Date BETWEEN '"+year+"/"+(month+1)+"/01' AND '"+year+"/"+(month+1)+"/31'";
        System.out.println(viewQuery+"\n"+sumQuery+"\n"+maxSupplier+"\n"+maxAmount);
        
        try {
            
            txtAmount.setText("");
            txtHighest.setText("");
            txtNumber.setText("");
            maxA = "";
            maxSup = "";
            
            
            conn = DBConnection.getDBConnection();
            pstate = conn.prepareStatement(viewQuery);
            ResultSet rset4 = pstate.executeQuery();
            table_Report.setModel(DbUtils.resultSetToTableModel(rset4));
            pstate.close();
            
            pstate = conn.prepareStatement(sumQuery);
            ResultSet r1 = pstate.executeQuery();
            r1.next();
            sumAmount = r1.getString(1);
            if(sumAmount == null){
                sumAmount = "";
            }
            System.out.println(sumAmount);
            txtAmount.setText("Rs: "+sumAmount);
            pstate.close();
            
            pstate = conn.prepareStatement(maxSupplier);
            ResultSet r2 = pstate.executeQuery();
            r2.next();
            maxSup = r2.getString(1);
            System.out.println(maxSup);
            pstate.close();
            
            
            pstate = conn.prepareStatement(maxAmount);
            ResultSet r3 = pstate.executeQuery();
            r3.next();
            maxA = r3.getString(1);
            System.out.println(maxA);
            txtHighest.setText(maxSup+"     Rs: "+maxA);
            pstate.close();
            
            pstate = conn.prepareStatement(numOfOrders);
            ResultSet r4 = pstate.executeQuery();
            r4.next();
            orderCunt = r4.getString(1);
            System.out.println(orderCunt);
            txtNumber.setText(orderCunt);
            pstate.close();

       
            input_year.setYear(year);
            input_month.setMonth(month);
            
            
        } catch (SQLException ex) {
            Logger.getLogger(order.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new order().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPane;
    private java.awt.TextField amount;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnState;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton delete_Order;
    private javax.swing.JButton download_Repo;
    private javax.swing.JComboBox<String> dropBox;
    private com.toedter.calendar.JDateChooser highDate;
    private com.toedter.calendar.JMonthChooser input_month;
    private com.toedter.calendar.JYearChooser input_year;
    private java.awt.TextField itemCode;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JDateChooser lowDate;
    private com.toedter.calendar.JDateChooser orderDate;
    private java.awt.TextField qunty;
    private com.toedter.calendar.JDateChooser recDate;
    private javax.swing.JTextField searchArea;
    private java.awt.TextField supName;
    private javax.swing.JTable table_Rec_Order;
    private javax.swing.JTable table_Report;
    private javax.swing.JTable table_pending_orders;
    private javax.swing.JLabel txtAmount;
    private javax.swing.JLabel txtHighest;
    private javax.swing.JLabel txtNumber;
    // End of variables declaration//GEN-END:variables
}
